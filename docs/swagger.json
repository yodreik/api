{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API server for yodreik application",
        "title": "yodreik API",
        "contact": {},
        "version": "0.1"
    },
    "host": "dreik.d.qarwe.online",
    "basePath": "/api",
    "paths": {
        "/activity": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "returns user's workout history",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Get user's activity history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Begin date",
                        "name": "begin",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date",
                        "name": "end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responsebody.ActivityHistory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Message"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Message"
                        }
                    }
                }
            }
        },
        "/auth/account": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "returns an user's information, that currently logged in",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get information about current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Account"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Message"
                        }
                    }
                }
            },
            "post": {
                "description": "create user in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Create new account",
                "parameters": [
                    {
                        "description": "User information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestbody.CreateAccount"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Account"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Message"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Message"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "updates user entity in storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Update personal information",
                "parameters": [
                    {
                        "description": "User Information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestbody.UpdateAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Message"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Message"
                        }
                    }
                }
            }
        },
        "/auth/account/avatar": {
            "patch": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "uploads a new avatar image for the user. Only PNG, JPG, and JPEG formats are allowed",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Upload User Avatar",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Avatar Image",
                        "name": "avatar",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Account"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Message"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Message"
                        }
                    }
                }
            }
        },
        "/auth/account/confirm": {
            "post": {
                "description": "confirms user's email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Confirm account's email",
                "parameters": [
                    {
                        "description": "Token",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestbody.ConfirmAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Message"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Message"
                        }
                    }
                }
            }
        },
        "/auth/password": {
            "patch": {
                "description": "updates password for user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Update password",
                "parameters": [
                    {
                        "description": "User information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestbody.UpdatePassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Message"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Message"
                        }
                    }
                }
            }
        },
        "/auth/password/reset": {
            "post": {
                "description": "sends an email with recovery link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Request password reset",
                "parameters": [
                    {
                        "description": "User information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestbody.ResetPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Message"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Message"
                        }
                    }
                }
            }
        },
        "/auth/session": {
            "post": {
                "description": "check if user exists, and return an access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Create a session for existing account",
                "parameters": [
                    {
                        "description": "User information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestbody.CreateSession"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Token"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Message"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Message"
                        }
                    }
                }
            }
        },
        "/healthcheck": {
            "get": {
                "description": "check if server status is ok",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status"
                ],
                "summary": "Ping a server",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/statistics": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "returns user's all-time statistics",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Get user's statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Statistics"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Message"
                        }
                    }
                }
            }
        },
        "/user/{username}": {
            "get": {
                "description": "returns an user's information and week activity history",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get public information about user by username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Profile"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Message"
                        }
                    }
                }
            }
        },
        "/workout": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "creates a new record about workout session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Create a record about past workout",
                "parameters": [
                    {
                        "description": "Information about workout session",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestbody.CreateWorkout"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Workout"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responsebody.Message"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "requestbody.ConfirmAccount": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "requestbody.CreateAccount": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 254
                },
                "password": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 8
                },
                "username": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 5
                }
            }
        },
        "requestbody.CreateSession": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "maxLength": 254
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requestbody.CreateWorkout": {
            "type": "object",
            "required": [
                "date",
                "duration",
                "kind"
            ],
            "properties": {
                "date": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "requestbody.ResetPassword": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 254
                }
            }
        },
        "requestbody.UpdateAccount": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "is_private": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 8
                },
                "username": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 5
                }
            }
        },
        "requestbody.UpdatePassword": {
            "type": "object",
            "required": [
                "password",
                "token"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 8
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "responsebody.Account": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_confirmed": {
                    "type": "boolean"
                },
                "is_private": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "responsebody.ActivityHistory": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                },
                "workouts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responsebody.Workout"
                    }
                }
            }
        },
        "responsebody.Message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "responsebody.Profile": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_private": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                },
                "week_activity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responsebody.Workout"
                    }
                }
            }
        },
        "responsebody.Statistics": {
            "type": "object",
            "properties": {
                "longest_activity": {
                    "type": "integer"
                },
                "minutes_spent": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "responsebody.Token": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "responsebody.Workout": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "AccessToken": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}